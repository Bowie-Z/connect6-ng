<?xml version="1.0" encoding="UTF-8"?>
<project name="connect6-ng" default="jar" basedir=".">
    <!-- 这里的basedir是 工程的目录为根目录
        一般basedir="."表示的是build.xml文件所在的相对目录为根目录即项目根目录下
    -->
    <property name="product" value="connect6-ng"/>
    <property name="src" value="src"/>
    <property name="build.dir" value="${basedir}/build"/>
    <property name="dist.dir" value="${basedir}/dist"/>
    <property name="myclasspath" value="${build.dir}/classes/java"/>
    <property name="findbugs.home" value="/usr/share/java" />

    <taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask"/>

    <target name="findbugs" depends="jar">
        <findbugs home="${findbugs.home}"
            output="xml"
            outputFile="${build.dir}/connect6-ng-fb.xml" >
            <!--<auxClasspath path="${basedir}/lib/Regex.jar" />-->
            <auxClasspath path="/usr/share/java/jsr-305.jar" />
            <auxClasspath path="/usr/share/java/findbugs-annotations.jar" />
            <sourcePath path="${basedir}/src/" />
            <class location="${build.dir}/${jar.file}" />
        </findbugs>
    </target>

    <patternset
        id="src.dist.patterns"
        includes="src/,build.xml,*build*.xml,docs/,*.txt,contrib/,lib/"
        excludes="" />

    <available file=".git" type="dir" property="git.present"/>

    <target name="git.revision" description="Store git revision in ${repository.version}" if="git.present">
        <exec executable="git" outputproperty="git.revision" failifexecutionfails="false" errorproperty="">
            <arg value="describe"/>
            <arg value="--tags"/>
            <arg value="--always"/>
            <arg value="HEAD"/>
        </exec>
        <condition property="repository.version" value="${git.revision}" else="unknown">
            <and>
                <isset property="git.revision"/>
                <length string="${git.revision}" trim="yes" length="0" when="greater"/>
            </and>
        </condition>
    </target>

    <target name="version" depends="git.revision" description="Set version number">
	<property name="version" value="${repository.version}"/>
    </target>

    <echo message="init ..." />
    <!-- =================================
          target: init
         ================================= -->
    <target name="init">
	<mkdir dir="${build.dir}/classes/java"/>
        <delete dir="${src}/classes"></delete>
    </target>

    <!-- 编译class文件-->
    <target name="build" depends="init">
        <javac
            classpath="/usr/share/java/jsr-305.jar:/usr/share/java/findbugs-annotations.jar"
            encoding="UTF-8"
            srcdir="${src}/java"
            destdir="${build.dir}/classes/java">
            <compilerarg line="-Xmaxwarns 10000000"/>
            <compilerarg line="-Xmaxerrs 10000000"/>
            <!-- for generics in Java 1.5: -->
            <compilerarg line="-Xlint:unchecked"/>
        </javac>
    </target>

    <target name="jar" depends="build,version">
	<property name="jar.file" value="${product}-${version}.jar"/>
	<jar
	    basedir="${build.dir}/classes/java"
	    destfile="${build.dir}/${jar.file}">
	    <manifest>
		<attribute name="Main-Class" value="cn.edu.tsinghua.se2011.connect6ng.Connect6"/>
		<!--<attribute name="Class-Path" value=""/>-->
	    </manifest>
	</jar>
    </target>

    <target name="run" depends="jar">
	<java jar="${build.dir}/${jar.file}" fork="yes">
	</java>
    </target>

    <target name="clean">
	<delete dir="${build.dir}" quiet="true" />
	<delete dir="${dist.dir}" quiet="true" />
    </target> 

  <!-- ================================================================== -->
  <!-- S O U R C E  D I S T R I B U T I O N                               -->
  <!-- ================================================================== -->
    <target name="init-dist" depends="version">

        <!-- Package is not called first if packaging src standalone, so the dist.dir may not exist -->
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${dist.dir}"/>
    </target>
  <!-- ================================================================== -->
  <!-- Packages the sources with zip                                      -->
  <!-- ================================================================== -->
  <!--                                                                    -->
  <!-- ================================================================== -->
  <target name="package-zip-src" depends="init, init-dist"
    description="--> Generates the sources archive as .zip">
    <zip destfile="${dist.dir}/connect6-ng-${version}-src.zip">
      <zipfileset prefix="connect6-ng-${version}" dir=".">
        <patternset refid="src.dist.patterns"/>
      </zipfileset>
    </zip>
	<connect6-ng-checksum file="${dist.dir}/connect6-ng-${version}-src.zip"/>
  </target>

  <!-- ================================================================== -->
  <!-- Packages the sources with tar-gzip                                 -->
  <!-- ================================================================== -->
  <!--                                                                    -->
  <!-- ================================================================== -->
  <target name="package-tgz-src" depends="init, init-dist"
    description="--> Generates the distribution as .tar.gz">

    <delete file="${build.dir}/connect6-ng-${version}-src.tar"/>
    <delete file="${dist.dir}/connect6-ng-${version}-src.tar.gz"/>
    <tar tarfile="${build.dir}/connect6-ng-${version}-src.tar" longfile="gnu">
      <tarfileset prefix="connect6-ng-${version}" dir=".">
        <patternset refid="src.dist.patterns"/>
      </tarfileset>
    </tar>

    <gzip zipfile="${dist.dir}/connect6-ng-${version}-src.tar.gz"
          src="${build.dir}/connect6-ng-${version}-src.tar"
    />
	<connect6-ng-checksum file="${dist.dir}/connect6-ng-${version}-src.tar.gz"/>
  </target>

  <!-- ================================================================== -->
  <!-- Packages the sources with zip and tar-gzip                         -->
  <!-- ================================================================== -->
  <!--                                                                    -->
  <!-- ================================================================== -->
  <target name="package-all-src" depends="package-zip-src, package-tgz-src"
    description="--> Generates the .tar.gz and .zip source distributions"/>

<!-- Macro for building checksum files -->
  <macrodef name="connect6-ng-checksum">
      <attribute name="file"/>
      <sequential>
	  <echo>Building checksums for '@{file}'</echo>
	  <checksum file="@{file}" algorithm="md5" format="MD5SUM" forceoverwrite="yes" readbuffersize="65536"/>
	  <checksum file="@{file}" algorithm="sha1" format="MD5SUM" forceoverwrite="yes" readbuffersize="65536"/>
      </sequential>
  </macrodef>

</project>
